name: AWS Deployment

on:
  push:
  workflow_dispatch:

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: aws
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: read-docker-compose
        id: read_docker_compose
        uses: jbutcher5/read-yaml@main 
        with:
          file: './compas/docker-compose-postgresql.yml'
          key-path: '["services", "scl-data-service", "image"]'

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ github.workspace }}/aws/task-executions/compas-scl-data-service.json
          container-name: CoMPAS-Scl-Data-Service
          image: ${{ steps.read_docker_compose.outputs.data }}
          environment-variables: |
            POSTGRESQL_PASSWORD=${{ secrets.POSTGRESQL_PASSWORD }}
            POSTGRESQL_USERNAME=${{ secrets.POSTGRESQL_USERNAME }}
            POSTGRESQL_HOST=${{ secrets.POSTGRESQL_HOST }}
            POSTGRESQL_DB=${{ secrets.POSTGRESQL_DB }}
            JWT_VERIFY_KEY=${{ secrets.JWT_VERIFY_KEY }}
            JWT_VERIFY_ISSUER=${{ secrets.JWT_VERIFY_ISSUER }}
        env: 
          POSTGRESQL_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
          POSTGRESQL_USERNAME: ${{ secrets.POSTGRESQL_USERNAME }}
          POSTGRESQL_HOST: ${{ secrets.POSTGRESQL_HOST }}
          POSTGRESQL_DB: ${{ secrets.POSTGRESQL_DB }}
          JWT_VERIFY_KEY: ${{ secrets.JWT_VERIFY_KEY }}
          JWT_VERIFY_ISSUER: ${{ secrets.JWT_VERIFY_ISSUER }}

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.AWS_SERVICE }}
          cluster: ${{ secrets.AWS_CLUSER }}
      env:
        AWS_SERVICE: CoMPAS-Scl-Data-Service
        AWS_CLUSTER: CoMPAS
