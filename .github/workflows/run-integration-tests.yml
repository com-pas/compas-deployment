# SPDX-FileCopyrightText: 2021 Alliander N.V.
#
# SPDX-License-Identifier: Apache-2.0

name: Run all integration tests

on: push

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache register
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}

      - name: Start containers
        run: docker-compose -f "docker/docker-compose.yml" up -d --build
      - name: Wait until containers started
        run: sh ./bin/docker-wait-on-containers.sh health=starting
      - name: Extract IP Address
        id: extract_ipaddress
        shell: bash
        # Extra the IP Address form the Docker Container.
        run: echo "##[set-output name=ipaddress;]$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker_reverse-proxy_1)"

#      - name: Created output directory (firefox)
#        run: mkdir -p target/firefox
#      - name: Execute integration tests (firefox)
#        uses: joonvena/robotframework-docker-action@v1.0
#        with:
#          browser: 'firefox'
#          robot_tests_dir: 'integration-testing'
#          robot_reports_dir: 'target/firefox'
#          robot_options : '-v url:http://${{ steps.extract_ipaddress.outputs.ipaddress }}/'
      - name: curl
        run: curl -v http://${{ steps.extract_ipaddress.outputs.ipaddress }}/

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker/docker-compose.yml" down -v
      - name: Wait until containers stopped
        if: always()
        run: sh ./bin/docker-wait-on-containers.sh status=running
